import json
import base64

from gcloud import storage
from oauth2client.service_account import ServiceAccountCredentials
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import pyplot
# from google.api_core.exceptions import AlreadyExists
# from google.cloud import iot_v1
# from google.cloud import pubsub
# from google.oauth2 import service_account
# from googleapiclient import discovery
# from googleapiclient.errors import HttpError

# def set_config(project_id, cloud_region, registry_id, device_id, config):
# 	print('Set device configuration')
# 	client = iot_v1.DeviceManagerClient()
# 	device_path = client.device_path(
#     project_id, cloud_region, registry_id,device_id)

# 	data = config.encode('utf-8')

# # 	return client.modify_cloud_to_device_config(device_path, data, version)
# event = {"Type": 0, "Data": "[' 120.00000,  26.40000,  20.98179,  20.00000,  25.00000, 100.00000', ' 130.00000,  26.93333,  21.13485,  20.00000,  25.00000, 100.00000', ' 140.00000,  27.46667,  21.29839,  20.00000,  25.00000, 100.00000', ' 150.00000,  28.00000,  21.47239,  20.00000,  25.00000, 100.00000', ' 160.00000,  28.53333,  21.65686,  20.00000,  25.00000, 100.00000', ' 170.00000,  29.06667,  21.85180,  20.00000,  25.00000, 100.00000']", "Time": "18.0", "To": "test-dev2"}
# message = event['data']
# if(event["Type"] == 0):
# 	data = event["Data"]
# 	datasplit = data.split(",")
# 	for i in range(0,):
payload_data = {}
payload_data2 = {0:{"Temp" : float(20.00), "Time" : float(0.0)}, "Index" : [0]}
payload_data.update(payload_data2 )

print(payload_data)
payload_data2 = {1:{"Temp" : float(21.00), "Time" : float(1.0)}, "Index" : [0,1]}
payload_data.update(payload_data2 )
payload_data2 = {2:{"Temp" : float(21.00), "Time" : float(1.0)}, "Index" : [0,1,2]}
payload_data.update(payload_data2 )
print(payload_data)

# payload = {"Type": 0, "Data" : payload_data, "Time" : 0, 'To' : "test-dev2"}
# #set_config(projectId,deviceRegistryLocation,deviceRegistryId,deviceId,message)
# payload = {'Type': 0, 'Data': {'7': {'Time': 60.0, 'Temp': 23.2}, '8': {'Time': 70.0, 'Temp': 23.73333}, '9': {'Time': 80.0, 'Temp': 24.26667}, '12': {'Time': 110.0, 'Temp': 25.86667}, '10': {'Time': 90.0, 'Temp': 24.8}, '11': {'Time': 100.0, 'Temp': 25.33333}, 'Index': [7, 8, 9, 10, 11, 12]}, 'Time': '12.0', 'To': 'test-dev2'}
# print("type" + str(payload["Type"]))
# if(payload["Type"] == 0):
# 	print("Here")
# for i in payload["Data"]["Index"]:
# 	print(payload["Data"][str(i)]["Temp"])
# 	print(payload[i]["Time"])

payload = {"Type": 1, "Data": "Stop Time3290.0", "Time": "0.87", "To": "test-dev"}
if(payload["Type"] == 1):
    if(payload["Data"].find("Stop Time") != -1):
        stop_time_str = payload["Data"].replace("Stop Time","")
        stop_time = float(stop_time_str)
        print("Set Stop Time: "+str(stop_time))

prediction = np.zeros(360)
payload = json.dumps({"Type": 0, "Data" : prediction.tolist()})
payload = {"Type": 0, "Data": [[17.815088272094727], [17.976364135742188], [18.143054962158203], [18.3153133392334], [18.49330711364746], [18.677207946777344], [18.8671932220459], [19.06344985961914], [19.266172409057617], [19.475563049316406], [19.691831588745117], [19.915203094482422], [20.145902633666992], [20.38417625427246], [20.630271911621094], [20.881689071655273], [21.13323402404785], [21.38496208190918], [20.543241500854492], [20.802017211914062], [21.064434051513672], [21.329727172851562], [21.59808349609375], [21.869718551635742], [22.144834518432617], [22.42365264892578], [22.706398010253906], [22.993282318115234], [23.2845401763916], [23.580408096313477], [23.881120681762695], [24.186920166015625], [24.498064041137695], [24.814128875732422], [25.133047103881836], [25.454370498657227], [25.10125160217285], [25.43829917907715], [25.779294967651367], [26.12374496459961], [26.47197723388672], [26.823333740234375], [27.176963806152344], [27.53312110900879], [27.892070770263672], [28.25405502319336], [28.61935043334961], [28.988224029541016], [29.36091423034668], [29.737674713134766], [30.118791580200195], [30.504249572753906], [30.893699645996094], [31.287311553955078], [30.87015151977539], [31.273386001586914], [31.6822452545166], [32.096473693847656], [32.51641082763672], [32.94159698486328], [33.37135696411133], [33.805728912353516], [34.241756439208984], [34.67866897583008], [35.11739730834961], [35.55827713012695], [36.001678466796875], [36.44791030883789], [36.897178649902344], [37.34952163696289], [37.80498123168945], [38.26374816894531], [37.81150817871094], [38.27500915527344], [38.742733001708984], [39.214786529541016], [39.69151306152344], [40.17253112792969], [40.65733337402344], [41.146095275878906], [41.63861083984375], [42.1354866027832], [42.63767623901367], [43.1451416015625], [43.65798568725586], [44.17628479003906], [44.70004653930664], [45.22916793823242], [45.76368713378906], [46.30366516113281], [45.82887268066406], [46.37390899658203], [46.92516326904297], [47.48256301879883], [48.046295166015625], [48.616024017333984], [49.191322326660156], [49.772342681884766], [50.358985900878906], [50.94977569580078], [51.54378890991211], [52.141109466552734], [52.741943359375], [53.34651184082031], [53.95498275756836], [54.56744384765625], [55.1841926574707], [55.805477142333984], [55.35650634765625], [55.981651306152344], [56.61175537109375], [57.247039794921875], [57.88787841796875], [58.534278869628906], [59.18621063232422], [59.844058990478516], [60.508060455322266], [61.17665100097656], [61.849082946777344], [62.52567672729492], [63.206809997558594], [63.8929443359375], [64.58447265625], [65.28176879882812], [65.9854736328125], [66.69618225097656], [66.24825286865234], [66.95923614501953], [67.67774963378906], [68.40444946289062], [69.14010620117188], [69.88472747802734], [70.63113403320312], [71.37712097167969], [72.1226577758789], [72.86553955078125], [73.60479736328125], [74.34060668945312], [75.0732192993164], [75.80292510986328], [76.5299072265625], [77.2542724609375], [77.97639465332031], [78.69645690917969], [78.35726928710938], [79.078369140625], [79.7972183227539], [80.51398468017578], [81.22886657714844], [81.94166564941406], [82.65007019042969], [83.19358825683594], [83.73101043701172], [84.26078796386719], [84.78240966796875], [85.2962646484375], [85.80277252197266], [86.30178833007812], [86.79329681396484], [87.2775650024414], [87.75493621826172], [88.22572326660156], [87.87409973144531], [88.33944702148438], [88.79788208007812], [89.24968719482422], [89.69514465332031], [90.13433837890625], [90.56636810302734], [90.90327453613281], [91.23442077636719], [91.55914306640625], [91.87745666503906], [92.18992614746094], [92.49710083007812], [92.79875183105469], [93.094970703125], [93.38609313964844], [93.67254638671875], [93.9547348022461], [93.58328247070312], [93.8531494140625], [94.1183090209961], [94.37916564941406], [94.63613891601562], [94.88951873779297], [95.13902282714844], [95.34333801269531], [95.54579162597656], [95.74629211425781], [95.94511413574219], [96.14287567138672], [96.34016418457031], [96.53675079345703], [96.73272705078125], [96.92823791503906], [97.11793518066406], [97.29999542236328], [96.83250427246094], [97.00598907470703], [97.17914581298828], [97.3524398803711], [97.5252685546875], [97.69285583496094], [97.85430908203125], [97.99227905273438], [98.12450408935547], [98.25084686279297], [98.37139892578125], [98.48640441894531], [98.59600067138672], [98.69981384277344], [98.79779815673828], [98.89006042480469], [98.97653198242188], [99.05753326416016], [98.810791015625], [98.90415954589844], [98.9930419921875], [99.07757568359375], [99.15801239013672], [99.23439025878906], [99.30661010742188], [99.36521911621094], [99.41978454589844], [99.47029113769531], [99.51687622070312], [99.55966186523438], [99.59878540039062], [99.63423919677734], [99.66607666015625], [99.6944580078125], [99.72029113769531], [99.74404907226562], [99.68832397460938], [99.72111511230469], [99.7510986328125], [99.77842712402344], [99.80347442626953], [99.82705688476562], [99.84922790527344], [99.86306762695312], [99.87548828125], [99.88646697998047], [99.8959732055664], [99.90406036376953], [99.91081237792969], [99.91629028320312], [99.92056274414062], [99.92369842529297], [99.92623901367188], [99.92845153808594], [99.93745422363281], [99.94337463378906], [99.94834899902344], [99.95250701904297], [99.95606994628906], [99.95954895019531], [99.96292114257812], [99.96072387695312], [99.95849609375], [99.95613098144531], [99.95352172851562], [99.95069885253906], [99.94766235351562], [99.9444580078125], [99.941162109375], [99.93775177001953], [99.93453216552734], [99.93160247802734], [99.94640350341797], [99.94520568847656], [99.94393920898438], [99.94269561767578], [99.94159698486328], [99.94091033935547], [99.94058227539062], [99.93636322021484], [99.93258666992188], [99.92916107177734], [99.92599487304688], [99.92308044433594], [99.92039489746094], [99.91799926757812], [99.91590881347656], [99.91410827636719], [99.91278839111328], [99.91195678710938], [99.9203872680664], [99.92084503173828], [99.9216079711914], [99.92269897460938], [99.92420196533203], [99.92628479003906], [99.9288558959961], [99.92858123779297], [99.92877960205078], [99.92935180664062], [99.93025207519531], [99.9314193725586], [99.93287658691406], [99.93465423583984], [99.9367446899414], [99.93915557861328], [99.94200134277344], [99.9452896118164], [99.94941711425781], [99.95376586914062], [99.95841979980469], [99.96343994140625], [99.96883392333984], [99.9747314453125], [99.98103332519531], [99.98523712158203], [99.98981475830078], [99.99469757080078], [99.99984741210938], [100.0052261352539], [100.0108413696289], [100.0167236328125], [100.02288818359375], [100.02930450439453], [100.03605651855469], [100.04317474365234], [100.04644775390625], [100.054443359375], [100.06271362304688], [100.0712661743164], [100.08013916015625], [100.08940887451172], [100.09901428222656], [100.10700225830078], [100.11529541015625], [100.12383270263672], [100.132568359375], [100.14148712158203], [100.1506118774414], [100.15991973876953], [100.16947937011719], [100.17921447753906], [100.18923950195312], [100.19951629638672], [100.20413208007812], [100.21515655517578], [100.22640228271484], [100.23787689208984], [100.24960327148438], [100.26165008544922], [100.27394104003906], [100.28502655029297], [100.29633331298828], [100.30783081054688], [100.3194808959961], [100.331298828125], [100.34326171875], [100.35539245605469], [100.36769104003906], [100.38016510009766], [100.39283752441406], [100.40572357177734]], "Time": "49.9", "To": "test-dev3"}
prediction = np.zeros(360)
prediction = payload["Data"] 
pyplot.plot(prediction)
pyplot.show()
# with open('turnkey-banner-265721-da1327341af6.json', 'r') as json_file:
# 	data = json.load(json_file)

# credentials = ServiceAccountCredentials.from_json_keyfile_dict(
# 	data
# )
# storage_client = storage.Client(credentials=credentials, project='turnkey-banner-265721')
# bucket = storage_client.get_bucket('iot_bucket_453')
# blob = bucket.blob('yhat_vm-file')
# blob.upload_from_filename("yhat_vm.txt")